rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }

    // Owner profile (keyed by UID)
    match /profiles/{uid} {
      allow read, write: if isSignedIn() && request.auth.uid == uid;
    }

    // Seller docs keyed by UID (current app structure)
    match /sellers/{uid} {
      // read: owner or public storefront
      allow read: if (isSignedIn() && request.auth.uid == uid) ||
                  (resource != null && resource.data.isPublic == true);

      // create/update/delete: owner only
      allow create, update, delete: if isSignedIn() && request.auth.uid == uid;

      // products subcollection 
      match /products/{productId} {
        allow read: if (isSignedIn() && request.auth.uid == uid) ||
                    (resource != null && resource.data.isPublic == true) ||
                    (exists(/databases/$(database)/documents/sellers/$(uid)) &&
                     get(/databases/$(database)/documents/sellers/$(uid)).data.isPublic == true);
        allow create, update, delete: if isSignedIn() && request.auth.uid == uid;
      }
    }

    // Stores keyed by any id, owned by ownerUid
    match /stores/{storeId} {
      allow create: if isSignedIn() &&
        request.resource.data.ownerUid == request.auth.uid;
      allow read, write: if isSignedIn() && (
        resource == null || resource.data.ownerUid == request.auth.uid
      );
    }

    // Onboarding progress keyed by UID
    match /onboarding/{uid} {
      allow read, write: if isSignedIn() && request.auth.uid == uid;
    }

    // Public read-only docs (marketing, etc.)
    match /public/{doc=**} { allow read: if true; allow write: if false; }

    // Deny everything else
    match /{document=**} { allow read, write: if false; }
  }
}