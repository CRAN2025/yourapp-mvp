import { useAuthContext } from '@/context/AuthContext';
import LoadingSpinner from '@/components/LoadingSpinner';
import React from 'react';

export default function SimpleSellerDashboard() {
  const { user, seller, loading } = useAuthContext();

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center" style={{ background:'#f9fbff' }}>
        <div className="text-center">
          <LoadingSpinner size="lg" />
          <p className="mt-4" style={{ color:'#64748b' }}>Loading seller dashboard...</p>
        </div>
      </div>
    );
  }

  if (!user) {
    return (
      <div className="min-h-screen flex items-center justify-center" style={{ background:'#f9fbff' }}>
        <div className="text-center p-8">
          <h1 style={{ fontSize:24, fontWeight:800, color:'#0f172a' }}>Not Authenticated</h1>
          <p className="mt-2" style={{ color:'#64748b' }}>Please sign in to access your dashboard.</p>
          <a
            href="/auth?mode=signin&redirect=/seller-dashboard"
            className="mt-4 inline-block"
            style={btnPrimary}
          >
            Sign In
          </a>
        </div>
      </div>
    );
  }

  if (!seller) {
    return (
      <div className="min-h-screen flex items-center justify-center" style={{ background:'#f9fbff' }}>
        <div className="text-center p-8">
          <h1 style={{ fontSize:24, fontWeight:800, color:'#0f172a' }}>No Seller Profile</h1>
          <p className="mt-2" style={{ color:'#64748b' }}>Unable to load seller profile data.</p>
          <p className="mt-1" style={{ fontSize:13, color:'#94a3b8' }}>User ID: {user.uid}</p>
        </div>
      </div>
    );
  }

  const origin = typeof window !== 'undefined' ? window.location.origin : '';
  const publicStoreUrl = `${origin}/store/${seller.id}`;

  const shareToWhatsApp = () => {
    const message = encodeURIComponent(`Check out my store: ${publicStoreUrl}`);
    window.open(`https://wa.me/?text=${message}`, '_blank', 'noopener,noreferrer');
  };

  const copyLink = async () => {
    try { await window.navigator?.clipboard?.writeText(publicStoreUrl); } catch {}
  };

  return (
    <div style={{ minHeight:'100vh', position:'relative', overflowX:'hidden', background:'#f6f9ff' }}>
      {/* Calm enterprise theme */}
      <style>{`
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800;900&display=swap');
        :root{
          --font:'Inter',ui-sans-serif,system-ui,-apple-system,'Segoe UI',Roboto,'Helvetica Neue',Arial;
          --ink:#0f172a;            /* slate-900 */
          --ink-2:#334155;          /* slate-700 */
          --ink-3:#64748b;          /* slate-500 */
          --surface:rgba(255,255,255,.78);
          --surface-strong:rgba(255,255,255,.86);
          --border:rgba(2,6,23,.08);
          --shadow:0 8px 24px rgba(2,6,23,.06);
          --shadow-strong:0 18px 42px rgba(2,6,23,.10);
          --accent:#5b7cff;         /* calm indigo-blue */
          --grad-soft:linear-gradient(180deg,#eef5ff 0%,#ffffff 100%);
          --radius-hero:20px; --radius-card:14px; --radius-btn:14px;
        }
        *{box-sizing:border-box}
        body{font-family:var(--font)}
        .container{max-width:1200px;margin:0 auto;padding:0 clamp(16px,4vw,28px)}

        /* Cards / glass */
        .glass{
          background:var(--surface);
          border:1px solid var(--border);
          backdrop-filter:saturate(140%) blur(10px);
          -webkit-backdrop-filter:saturate(140%) blur(10px);
          box-shadow:var(--shadow);
        }
        .card{border-radius:var(--radius-card)}
        .hero{
          border-radius:var(--radius-hero);
          background:var(--grad-soft);
          border:1px solid rgba(2,6,23,.06);
        }

        /* Buttons (calm + unified) */
        .btn{
          height:52px; padding:0 22px; border-radius:var(--radius-btn);
          font-weight:700; font-size:16px; border:1px solid rgba(2,6,23,.06);
          cursor:pointer; transition:box-shadow .15s ease, transform .08s ease, background .2s ease;
        }
        .btn:active{ transform:translateY(1px) }
        .btnPrimary{
          color:#0f172a;
          background:linear-gradient(135deg,#e7eeff 0%,#ffffff 100%);
          box-shadow:0 6px 16px rgba(2,6,23,.08);
        }
        .btnPrimary:hover{ box-shadow:0 10px 24px rgba(2,6,23,.10) }
        .btnSecondary{
          background:#ffffff; color:#0f172a; border:1px solid rgba(2,6,23,.10);
          box-shadow:0 4px 12px rgba(2,6,23,.06);
        }
        :where(button,a):focus-visible{ outline:2px solid var(--accent); outline-offset:2px }

        /* Grid */
        .grid{display:grid;gap:22px}
        @media (min-width:769px){ .gridCols{grid-template-columns:repeat(4,minmax(0,1fr))} }
        @media (max-width:768px){ .gridCols{grid-template-columns:1fr} }

        /* Tiles */
        .tile{padding:22px}
        .tileHead{display:flex;align-items:center;gap:12px;margin-bottom:14px}
        .tileIcon{
          width:52px;height:52px;border-radius:12px;display:grid;place-items:center;color:#0f172a;
          background:linear-gradient(180deg,#f1f6ff,#ffffff); border:1px solid rgba(2,6,23,.06);
        }

        .mono{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace}
      `}</style>

      {/* gentle background accents */}
      <div style={{
        position:'absolute', top:'-12%', left:'-8%', width:'34%', height:'44%',
        background:'radial-gradient(circle, rgba(147,197,253,0.18) 0%, transparent 70%)',
        borderRadius:'50%', filter:'blur(36px)', zIndex:0
      }} />
      <div style={{
        position:'absolute', bottom:'-12%', right:'-10%', width:'28%', height:'38%',
        background:'radial-gradient(circle, rgba(99,102,241,0.12) 0%, transparent 70%)',
        borderRadius:'50%', filter:'blur(38px)', zIndex:0
      }} />

      <main className="container" style={{ position:'relative', zIndex:1, paddingTop:26, paddingBottom:34 }}>
        {/* Welcome */}
        <section className="glass hero" style={{ padding:22, marginBottom:20 }}>
          <h1 style={{
            fontSize:'clamp(36px, 6vw, 56px)', lineHeight:1.06, margin:'0 0 8px',
            fontWeight:900, letterSpacing:'-0.02em', color:'var(--ink)'
          }}>
            Welcome, {seller.fullName || 'Seller'}!
          </h1>
          <p style={{ fontSize:17, color:'var(--ink-2)', margin:'0 0 4px' }}>
            Store: <strong style={{ color:'var(--ink)' }}>{seller.storeName || 'Your Store'}</strong>
          </p>
          <p style={{ fontSize:13.5, color:'var(--ink-3)' }}>
            User ID: <span className="mono">{user.uid}</span> ‚Ä¢ Onboarding: {seller.onboardingCompleted ? '‚úÖ Complete' : '‚ö†Ô∏è Incomplete'}
          </p>
        </section>

        {/* Onboarding reminder (gentle) */}
        {!seller.onboardingCompleted && (
          <section className="glass card" style={{ padding:18, marginBottom:20 }}>
            <div style={{
              display:'flex', gap:12, alignItems:'flex-start',
              background:'linear-gradient(180deg,#fff7ed,#ffffff)',
              border:'1px solid #fdebc8',
              borderRadius:12, padding:14
            }}>
              <span aria-hidden>‚ö†Ô∏è</span>
              <div>
                <div style={{ fontWeight:800, color:'#7c2d12', marginBottom:4 }}>Complete Your Store Setup</div>
                <div style={{ color:'#7c2d12', opacity:.9, marginBottom:10 }}>
                  Finish onboarding to unlock all features and make your store public.
                </div>
                <a href="/onboarding/step-1" style={{ ...btnPrimary, height:44, padding:'0 18px' }}>Continue Setup</a>
              </div>
            </div>
          </section>
        )}

        {/* Action tiles */}
        <section className="grid gridCols" aria-label="Dashboard actions">
          <Tile
            icon="üì¶"
            title="Manage Products"
            body="Add, edit, or remove products from your store"
            onClick={() => (window.location.href = '/products')}
            buttonText="Open Products"
          />
          <Tile
            icon="üõçÔ∏è"
            title="View Storefront"
            body="See how your store looks to customers"
            onClick={() => (window.location.href = '/storefront')}
            buttonText="View Storefront"
          />
          <Tile
            icon="üìà"
            title="Analytics"
            body="Track views, clicks, and performance"
            onClick={() => (window.location.href = '/analytics')}
            buttonText="View Analytics"
          />
          <Tile
            icon="‚öôÔ∏è"
            title="Store Settings"
            body="Update store info and preferences"
            onClick={() => (window.location.href = '/settings')}
            buttonText="Open Settings"
          />
        </section>

        {/* Public Link */}
        <section className="glass card" style={{ padding:22, marginTop:22 }}>
          <h3 style={{ fontSize:18, fontWeight:900, margin:'0 0 12px', color:'var(--ink)' }}>Your Public Store Link</h3>
          <div style={{ display:'flex', gap:12, flexWrap:'wrap', alignItems:'stretch' }}>
            <div
              className="mono"
              style={{
                flex:'1 1 420px',
                background:'#f3f6fc',
                border:'1px solid rgba(15,23,42,.08)',
                padding:'12px 14px',
                borderRadius:12,
                color:'var(--ink-2)',
                wordBreak:'break-all'
              }}
              aria-label="Public store URL"
            >
              {publicStoreUrl}
            </div>
            <div style={{ display:'flex', gap:10 }}>
              <button onClick={copyLink} className="btn btnSecondary" aria-label="Copy store link">Copy Link</button>
              <button onClick={shareToWhatsApp} className="btn btnPrimary" aria-label="Share store link on WhatsApp">Share Link</button>
            </div>
          </div>
        </section>
      </main>
    </div>
  );
}

/* ---------- Subcomponents & styles ---------- */

function Tile({ icon, title, body, onClick, buttonText }) {
  return (
    <div className="glass card tile">
      <div className="tileHead">
        <div className="tileIcon">{icon}</div>
        <div>
          <div style={{ fontWeight:800, color:'var(--ink)' }}>{title}</div>
          <div style={{ fontSize:14, color:'var(--ink-3)' }}>{body}</div>
        </div>
      </div>
      <button onClick={onClick} className="btn btnPrimary">{buttonText}</button>
    </div>
  );
}

/* Buttons reused in a few places as inline style objects */
const btnPrimary = {
  border: '1px solid rgba(2,6,23,.06)',
  height: 48,
  padding: '0 20px',
  borderRadius: 14,
  fontWeight: 700,
  color: '#0f172a',
  background: 'linear-gradient(135deg,#e7eeff 0%, #ffffff 100%)',
  boxShadow: '0 6px 16px rgba(2,6,23,.08)',
  cursor: 'pointer',
  transition: 'background-position .2s ease, box-shadow .15s ease, transform .1s ease',
};

